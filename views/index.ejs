<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Typing Game</title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div class="mainPage" id="loginPage">
        <div class="centering">
            <h1>Name:</h1>
            <form id="login-form" onsubmit="register(event)">
                <input id="usernameInput" placeholder="Username" required autocomplete="off" />
                <button id="usernameButton" type="submit">Join</button>
            </form>
        </div>
    </div>

    <div class="mainPage" id="lobbyPage" style="display:none;">
        <div class="centering">
            <h1>Lobby</h1>
            <div id="lobby-display">
                <div class="lobby-item" id="player-display">
                    <h3>Players:</h3>
                    <ul id="playerList"></ul>
                </div>
                <div class="lobby-item" id="settings-display">
                    <h3>Settings:</h3>
                    <label>Time (seconds):</label>
                    <input id="timeInput" type="number" min="1" value="30" onchange="updateTime()" />
                </div>
            </div>
            <button id="lobbyButton" onclick="startGame()">Start Game</button>
        </div>
    </div>

    <div class="mainPage" id="gamePage" style="display:none;">
        <div class="centering">
            <div id="gameHeader">
                <h1>Typing Round <span id="roundInfo"></span><span id="timer"></span></h1>
            </div>
            <p id="prevSentence"></p>
            <p id="nextSentence" style="display:hidden;"></p>
            <textarea name="sentenceInput" id="sentenceInput" style="display:block;" autocomplete="off" autocorrect="off" spellcheck="false"></textarea>
            <button id="sentenceButton" onclick="submitSentence()" style="display:block;">Submit</button>
            <p id="waitingMessage" style="display:none;">Waiting for other players...</p>
        </div>
    </div>

    <div class="mainPage" id="resultPage" style="display:none;">
        <div id="outerCenter">
            <div class="centering">
                <h1>Final Story</h1>
                <div id="resultContainer"></div>
            </div>

            <div id="resultButtons">
                <button id="playAgain" onclick="location.reload()">Play Again</button>
                <button id="nextButton" onclick="requestNext()">Next</button>
            </div>
        </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();

        function register(event) {
            event.preventDefault();
            const username = document.getElementById('usernameInput').value;
            socket.emit('register', username);
            document.getElementById('loginPage').style.display = 'none';
            document.getElementById('lobbyPage').style.display = 'block';
        }

        function updateTime() {
            const time = document.getElementById('timeInput').value;
            socket.emit('setTime', time);
        }

        function startGame() {
            socket.emit('startGame');
        }

        function submitSentence() {
            let sentence = document.getElementById('sentenceInput').value;
            if (sentence.trim() === "") {
                sentence = "<empty>";
            }
            socket.emit('submitSentence', sentence);
            document.getElementById('sentenceInput').value = "";
            document.getElementById('nextSentence').innerText = sentence;
            document.getElementById('nextSentence').style.display = "block";
            document.getElementById('waitingMessage').style.display = 'block'; // Zeigt an, dass du wartest
            document.getElementById('sentenceButton').style.display = 'none';
            document.getElementById('sentenceInput').style.display = 'none';
        }

        socket.on('playersUpdate', (players) => {
            const list = document.getElementById('playerList');
            list.innerHTML = "";
            players.forEach(p => {
                const li = document.createElement('li');
                li.textContent = p;
                list.appendChild(li);
            });
        });

        socket.on('timeUpdate', (time) => {
            document.getElementById('timeInput').value = time;
        });

        socket.on('startGame', () => {
            document.getElementById('lobbyPage').style.display = 'none';
            document.getElementById('gamePage').style.display = 'block';
        });

        socket.on('newRound', (data) => {
            document.getElementById('roundInfo').textContent = `${data.round}/${data.totalRounds}`;
            document.getElementById('prevSentence').textContent = data.previousSentence || "Start a new story!";
            document.getElementById('waitingMessage').style.display = 'none'; // Verstecke "Warten"-Nachricht, wenn die Runde startet
            document.getElementById('nextSentence').style.display = "none";
            document.getElementById('sentenceButton').style.display = 'block';
            document.getElementById('sentenceInput').style.display = 'block';
            document.getElementById('timer').style.color = "white";
        });

        socket.on("timerUpdate", (time) => {
            const timerElement = document.getElementById("timer");
            const seconds = Math.floor(time / 1000);
            const seconds_left = seconds % 60;
            if (seconds_left < 12) {
                document.getElementById('timer').style.color = "red";
            }
            if (seconds_left < 2) {
                submitSentence();
            }
            timerElement.textContent = `${seconds_left-1}`;
        });

        let stories = []
        let currentStoryIndex = 0;
        let currentEntryIndex = 0;

        socket.on('showResults', (players) => {
            document.getElementById('gamePage').style.display = 'none';
            document.getElementById('resultPage').style.display = 'block';
            
            stories = []; // Reset
            currentStoryIndex = 0;
            currentEntryIndex = 0;

            // Container leeren
            const container = document.getElementById('resultContainer');
            container.innerHTML = "";

        // Spieler-Storys vorbereiten
        Object.values(players).forEach(storyList => {
            const storyBlock = {
                entries: storyList, // Liste von {name, story}
                element: document.createElement('div') // HTML-Container
            };

            storyBlock.element.style.border = "1px solid gray";
            storyBlock.element.style.margin = "10px";
            storyBlock.element.style.padding = "10px";
            //storyBlock.element.style.width = "80%"; // optional etwas kleiner
            storyBlock.element.style.backgroundColor = "#222"; // leicht andere Farbe

            container.appendChild(storyBlock.element);
            stories.push(storyBlock);
        });
    });

    function next() {
        if (currentStoryIndex >= stories.length) {
            return; // Alle Storys sind durch
        }

        const currentStory = stories[currentStoryIndex];

        if (currentEntryIndex < currentStory.entries.length) {
            const entry = currentStory.entries[currentEntryIndex];
            const p = document.createElement('p');
            p.textContent = `${entry.name}: ${entry.story}`;
            currentStory.element.appendChild(p);
            currentEntryIndex++;
        } else {
            // Wenn die aktuelle Story fertig ist, zur nÃ¤chsten springen
            currentStoryIndex++;
            currentEntryIndex = 0;
            next(); // Automatisch weitermachen
        }
    }

    function requestNext() {
        socket.emit('requestNext');
    }

    socket.on('doNext', () => {
        next();
    })
 

    </script>
</body>
</html>
